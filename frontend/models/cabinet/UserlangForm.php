<?php

namespace frontend\models\cabinet;

use common\components\DateToTimeBehavior;
use common\components\FilesUpload;
use common\models\NetCity;
use common\models\NetCountry;
use common\models\User;
use common\models\UserWork;
use Yii;
use yii\base\Model;
use yii\base\ModelEvent;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;
use yii\web\UploadedFile;

/**
 * ContactForm is the model behind the contact form.
 */
class UserlangForm extends User
{
    public $lang;
    public $level;
    public $user_id;
    public $langarray;

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['lang', 'level'], 'required', /*'message' => ''*/],
            [['langarray', 'user_id'], 'safe']
        ];
    }

    public function init()
    {
        $this->user_id = Yii::$app->user->getId();
        $this->langarray = json_decode(Yii::$app->user->identity->langjson, true);
        parent::init();
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
    }


    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'lang' => Yii::t('app', 'Language'),
            'level' => Yii::t('app', 'Proficiency level'),
        ];
    }

    public function saveInfo()
    {
        $langs = [];
        foreach ($this->lang as $key => $l) {
            $langs[$key]['lang'] = $l;
        }
        foreach ($this->level as $key => $l) {
            $langs[$key]['level'] = $l;
        }

        if ($langs) {
            $user = User::findOne(['id' => $this->user_id]);
            $user->langjson = json_encode($langs, JSON_UNESCAPED_UNICODE);
            $user->updated_at = time();
            if ($user->save()) {
                Yii::$app->session->setFlash('success', 'Profile updated');
                return 'create';
            }
        }
    }
}
