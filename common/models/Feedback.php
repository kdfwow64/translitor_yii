<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "feedback".
 *
 * @property integer $id
 * @property string $name
 * @property string $email
 * @property string $text
 * @property integer $date
 */
class Feedback extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'feedback';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'email', 'theme', 'text'], 'required'],
            [['text'], 'string'],
            [['date'], 'integer'],
            [['email'], 'email'],
            [['name', 'email', 'theme'], 'string', 'max' => 255],
        ];
    }

    public function beforeValidate()
    {
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    } 

    public function sendEmail()
    {
        $this->date = time();
        if ($this->save()) {
            $text = "Получено новое сообщение c сайта " . $_SERVER['HTTP_HOST'] . " на тему " . $this->theme . '<br>';
            $text .= 'Тема: ' . $this->theme . '<br>';
            $text .= 'Имя: ' . $this->name . '<br>';
            $text .= 'Email: ' . $this->email . '<br>';
            $text .= 'Сообщение: ' . $this->text . '<br>';
            return Yii::$app->mailer->compose()
                ->setTo(Yii::$app->params['adminEmail'])
                ->setFrom(['noreplay@' . str_replace('www.','' , $_SERVER['HTTP_HOST']) => 'Noreplay ' . $_SERVER['HTTP_HOST']])
                ->setSubject('Новое сообщение он пользователя с сайта ' . $_SERVER['HTTP_HOST'])
                ->setHtmlBody($text)
                ->send();
            return true;
        }
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Имя',
            'email' => 'E-mail',
            'text' => 'Сообщение',
            'theme' => 'Тема',
            'date' => 'Дата',
        ];
    }
}
